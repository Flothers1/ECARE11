@model List<PatientRegistrations>
@Html.AntiForgeryToken()
@{
    ViewData["Title"] = "Lab Service Requests";
}

<header class="text-white mb-4">
    <!-- Removed custom-gray-header class -->
    <div class="container-fluid">
        <div class="d-flex justify-content-between align-items-center p-3 custom-header">
            <h1 class="m-0 text-white">Admin Portal</h1>
            <form asp-controller="Account" asp-action="Logout" method="post">
                <button type="submit" class="btn btn-light fw-bold px-4 py-2">Logout</button>
            </form>
        </div>
    </div>
</header>
<div class="container-fluid">

    <div class="d-flex gap-2 mb-3">
        <a asp-controller="PatientRegistrations" asp-action="Create" class="btn text-white" style="background-color: #957200;">Register Patient</a>
        <a asp-controller="ServiceRequests" asp-action="Create" class="btn text-white" style="background-color: #957200;">Create Lab Service Request</a>
        <a asp-controller="PharmacyServiceRequest" asp-action="Create" class="btn text-white" style="background-color: #957200;">Create Pharmacy Service Request</a>
        <a asp-controller="CareProgram" asp-action="Create" class="btn text-white" style="background-color: #957200;">Create New Program</a>
        <a asp-controller="Account" asp-action="Register" class="btn text-white" style="background-color: #957200;">Create New User</a>

    </div>
    <ul class="tab-container p-0 m-0 d-flex">
        <li class="nav-item @(ViewContext.RouteData.Values["Controller"].ToString() == "PatientRegistrations"
        && ViewContext.RouteData.Values["action"].ToString() == "Indexadmin" ? "active" : "")">
            <a asp-action="Indexadmin" asp-controller="PatientRegistrations">
                <i class="mdi mdi-ticket-confirmation icon-side-bar"></i>
                Patients List
            </a>
        </li>
        <li class="nav-item @(ViewContext.RouteData.Values["Controller"].ToString() == "CareProgram" && ViewContext.RouteData.Values["Action"].ToString() == "Index" ? "active" : "")">
            <a asp-action="Index" asp-controller="CareProgram">
                <i class="mdi mdi-ticket-confirmation icon-side-bar"></i>
                Program List
            </a>
        </li>
        <li class="nav-item @(ViewContext.RouteData.Values["Controller"].ToString() == "PatientRegistrations" && ViewContext.RouteData.Values["Action"].ToString() == "ServiceRequests" ? "active" : "")">
            <a asp-action="ServiceRequests" asp-controller="PatientRegistrations">
                <i class="mdi mdi-ticket-confirmation icon-side-bar"></i>
                Lab Service Requests
            </a>
        </li>
        <li class="nav-item @(ViewContext.RouteData.Values["Controller"].ToString() == "PharmacyServiceRequest" && ViewContext.RouteData.Values["Action"].ToString() == "Index" ? "active" : "")">
            <a asp-action="Index" asp-controller="PharmacyServiceRequest">
                <i class="mdi mdi-ticket-confirmation icon-side-bar"></i>
                Pharmacy Service Requests
            </a>
        </li>
    </ul>
    <div class="table-tab-container">
        <table id="patientsTable" class="table table-tab d-block text-center border-bottom-0 table-overflow">
            <thead>
                <tr>
                    <th>Request Date</th>
                    <th>Patient Name</th>
                    <th>Co Payment Percentage</th>
                    <th>Required Tests</th>
                    <th>Lab</th>
                    <th>Lab Branch</th>
                    <th>E-Voucher PDF</th>
                    <th>National ID</th>
                    <th>Invoice</th>
                    <th>Invoiced</th>
                </tr>
            </thead>
            <tbody>
                @if (Model != null && Model.Any())
                {
                    int counter = 1;
                    @foreach (var patient in Model)
                    {
                        var labBranch = patient?.ServiceRequests?.FirstOrDefault()?.LabBranch?.LabBranchName;

                        if (string.IsNullOrEmpty(labBranch))
                        {
                            continue;
                        }

                        @foreach (var request in patient.ServiceRequests)
                        {
                            <tr>
                                <td>
                                    @if (request.Date.HasValue)
                                    {
                                        <span>@request.Date.Value.ToString("yyyy-MM-dd HH:mm:ss")</span>
                                    }
                                    else
                                    {
                                        <span class="text-muted">No date</span>
                                    }
                                </td>

                                <td>@patient.PatientName</td>

                                <td>
                                    @if (request.CoPaymentPercentage.HasValue)
                                    {
                                        <span>@request.CoPaymentPercentage</span>
                                    }
                                    else
                                    {
                                        <span class="text-muted">No CoPaymentPercentage available</span>
                                    }
                                </td>

                                <td>
                                    @if (!string.IsNullOrEmpty(request.RequiredTests))
                                    {
                                        <span>@request.RequiredTests</span>
                                    }
                                    else
                                    {
                                        <span class="text-muted">No Test available</span>
                                    }
                                </td>

                                <td>
                                    <span>@(request?.LabBranch?.Lab?.LabName ?? "No Lab")</span>
                                </td>

                                <td>
                                    <span>@(request?.LabBranch?.LabBranchName ?? "No Branch")</span>
                                </td>
                                <td>
                                    @if (!string.IsNullOrEmpty(request.EVoucherPDF))
                                    {
                                        <a href="@Url.Content(request.EVoucherPDF)" download target="_blank" class="evoucher-icon-link">
                                            <span class="download-text">Download eVoucher</span>
                                            <span class="icon-wrapper">
                                                <i class="fa-solid fa-ticket"></i>
                                            </span>
                                        </a>
                                    }
                                    else
                                    {
                                        <span class="unavailable-dash">—</span>
                                    }
                                </td>
                                <td>@patient.NationalID</td>

                                <td class="text-center align-middle">
                                    <div class="upload-container" data-request-id="@request.Service_RequestId">

                                        <div class="position-relative">
                                            <!-- Conditional display -->
                                            @if (!string.IsNullOrEmpty(request.Invoice))
                                            {
                                                <div class="mb-2 upload-status-text">
                                                    <i class="fas fa-check-circle"></i> Invoice uploaded
                                                </div>
                                            }

                                            <!-- Styled upload button -->
                                            <label class="btn btn-sm custom-btn @(string.IsNullOrEmpty(request.Invoice) ? "btn-filled" : "btn-outline")">
                                                <i class="fas @(string.IsNullOrEmpty(request.Invoice) ? "fa-upload" : "fa-sync") me-1"></i>
                                                @(string.IsNullOrEmpty(request.Invoice) ? "Upload Invoice" : "Update Invoice")
                                                <input type="file"
                                                       name="file"
                                                       class="invoice-upload d-none"
                                                       accept=".jpg,.jpeg,.png,.pdf"
                                                       onchange="uploadInvoiceFile(event)" />
                                            </label>

                                            <div class="upload-feedback small mt-1"></div>
                                        </div>
                                    </div>
                                </td>
                                <td>
                                    <div class="d-flex justify-content-center">
                                        <div class="form-check form-switch">
                                            <input type="checkbox"
                                                   class="form-check-input payment-toggle"
                                                   data-request-id="@request.Service_RequestId"
                                            @(request.Payment ? "checked" : "")
                                                   data-url="@Url.Action("TogglePayment", "PatientRegistrations")" />
                                        </div>
                                    </div>
                                </td>
                            </tr>
                        }

                        counter++;
                    }
                }
                else
                {
                    <tr>
                        <td colspan="8" class="text-center">No patients found.</td>
                    </tr>
                }
            </tbody>
        </table>
    </div>

</div>

<style>
    .custom-header {
        background-color: #957200;
        border-radius: 8px;
    }

    .container-fluid {
        padding-left: 1.5rem;
        padding-right: 1.5rem;
    }

    .btn-light {
        color: #957200;
        border: 2px solid #957200;
        transition: all 0.3s ease;
    }

    .table-responsive {
        overflow-x: visible;
        background-color: #eee;
    }

    .btn-light:hover {
        background-color: #957200;
        color: white;
    }


    .table-tab-container {
        height: calc(100% - 120px);
        background-color: #eee;
    }

    #tickets_wrapper {
        height: calc(100% - 80px);
    }

    .table-overflow {
        height: 100%;
    }

    .table-overflow tbody tr {
        background-color: #eee;
    }

    th {
        width: calc(100% / 7);
    }

    .assing-btn {
        font-size: 13px;
        padding: 5px;
    }

    .btn-gray2 {
        float: left;
        margin-right: 40px;
    }

    .form-switch .form-check-input {
        width: 3em;
        height: 1.5em;
        cursor: pointer;
    }

   .form-switch .form-check-input:checked {
       background-color: #957200;
       border-color: #957200;
   }

   .form-switch .form-check-input:focus {
       box-shadow: 0 0 0 0.25rem rgba(149, 114, 0, 0.25);
       border-color: #957200;
   }

    .upload-container form {
        display: flex;
        justify-content: center;
        align-items: center;
        min-height: 50px; /* Adjust as needed */
    }

    .form-control-file {
        border: 2px dashed #957200;
        padding: 10px;
        border-radius: 8px;
        background-color: #f8f9fa;
        cursor: pointer;
        transition: all 0.3s ease;
    }

    .form-control-file:hover {
        background-color: #fff;
        border-color: #756000;
    }

    .custom-btn {
        color: #957200 !important;
        border-color: #957200 !important;
    }

    .custom-btn.btn-filled {
        background-color: #957200;
        color: white !important;
    }

    .custom-btn.btn-outline {
        background-color: transparent;
    }

    .custom-btn:hover {
        background-color: #7a5d00 !important;
        border-color: #7a5d00 !important;
        color: white !important;
    }

    .upload-status-text {
        color: #957200 !important;
        font-weight: 500;
    }

    .upload-feedback {
        color: #957200;
    }
    /* ivouvher */
    .evoucher-icon-link {
        display: inline-flex;
        align-items: center;
        gap: 5px;
        text-decoration: none;
        color: #957200;
        transition: all 0.3s ease;
    }

    .icon-wrapper {
        display: flex;
        font-size: 1.5rem;
        padding: 8px;
        border-radius: 50%;
        background-color: rgba(149, 114, 0, 0.1);
        transition: all 0.3s ease;
    }

    .download-text {
        font-size: 0.875rem;
        transition: color 0.3s ease;
    }


    /* Icon wrappers for warnings */
    .unavailable-dash {
        display: inline-block;
        color: #6c757d; /* text-muted color */
        font-weight: 400;
        font-size: 1rem;
    }

    /* Hover effects for eVoucher (same as invoice) */
    .evoucher-icon-link:hover .icon-wrapper {
        color: white;
        background-color: #957200;
        transform: scale(1.1);
        box-shadow: 0 2px 8px rgba(149, 114, 0, 0.3);
    }

    .evoucher-icon-link:hover .download-text {
        color: #957200;
        text-decoration: underline;
    }
</style>

@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    <script src="~/js/jquery.table2excel.min.js"></script>
    <script src="~/js/jquery.dataTables.min.js"></script>
    <script>
             $(function () {
            var table = $('#patientsTable').DataTable({
                "columnDefs": [{ "type": "date", "targets": 1 }],
                "order": [[1, "desc"]]
            });

            var buttonElement = $('<button>', {
                type: 'submit',
                class: 'btn-gray2 mb-3',
                id: 'data2excel',
                text: 'Export to Excel'
            });

            $('#patientsTable_wrapper').prepend(buttonElement);

            $('#data2excel').click(function (e) {
                var currentPageLength = table.page.len();
                table.page.len(-1).draw();
                $("#patientsTable").table2excel({ filename: "PatientRegistrations.xls" });
                table.page.len(currentPageLength).draw();
            });
        });
       
    </script>
    <script>
        $(document).ready(function () {
            // Handle payment toggle
            $('.payment-toggle').change(function () {
                var serviceRequestId = $(this).data('request-id');
                var isChecked = $(this).is(':checked');
                var $checkbox = $(this);
                $.ajax({
                    url: $checkbox.data('url'),
                    type: 'POST',
                    data: {
                        serviceRequestId: serviceRequestId,
                        __RequestVerificationToken: $('input[name="__RequestVerificationToken"]').val()
                    },
                    success: function () {
                        // Optional: Show success feedback
                        console.log('Payment status updated.');
                    },
                    error: function () {
                        // Revert the toggle on error
                        $(this).prop('checked', !isChecked);
                        alert('Failed to update payment status.');
                    }
                });
            });
        });
    </script>
    <script>
        function uploadInvoiceFile(e) {
          // Get the file object (note: use files, not value)
          var file = e.target.files[0];
          if (!file) {
            return;
          }

          // Get the container div that holds the data-request-id attribute
          var $container = $(e.target).closest('.upload-container');
          var serviceRequestId = $container.data('request-id');

          // Prepare the form data
          var formData = new FormData();
          formData.append("file", file);
          formData.append("serviceRequestId", serviceRequestId);
          // Add anti-forgery token if needed; assuming it's available in a hidden field or meta tag
          formData.append("__RequestVerificationToken", $('input[name="__RequestVerificationToken"]').val());

          // Send the AJAX request
          $.ajax({
            url: '@Url.Action("UploadInvoice", "ServiceRequests")',
            type: 'POST',
            data: formData,
            contentType: false,
            processData: false,
            success: function(response) {
              // Redirect manually after a successful upload (or update UI accordingly)
              window.location.href = '@Url.Action("Indexadmin", "PatientRegistrations")';
            },
            error: function(jqXHR, textStatus, errorThrown) {
              console.error("Error details:", jqXHR.responseText, textStatus, errorThrown);
              $container.find('.upload-feedback').html('<span class="text-danger">Upload failed: ' + jqXHR.responseText + '</span>');
            }
          });
        }
    </script>

}
